package com.example.core.services;

import com.example.core.repositories.PairRepository;
import com.example.shared.enums.PairType;
import com.example.shared.enums.StabilityRating;
import com.example.shared.models.Pair;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class StablePairsService {
    private final PairRepository pairRepository;

    /**
     * –°–æ–∑–¥–∞—Ç—å –∑–µ—Ä–∫–∞–ª—å–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä
     *
     * @param originalPairs –∏—Å—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä—ã
     * @return —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞—Ä (–∏—Å—Ö–æ–¥–Ω—ã–µ + –∑–µ—Ä–∫–∞–ª—å–Ω—ã–µ)
     */
    public List<Pair> createPairsWithMirrors(List<Pair> originalPairs) {
        log.info("ü™û –°–æ–∑–¥–∞–Ω–∏–µ –∑–µ—Ä–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ä –¥–ª—è {} –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä", originalPairs.size());

        List<Pair> allPairs = new ArrayList<>(originalPairs);

        for (Pair originalPair : originalPairs) {
            Pair mirrorPair = createMirrorPair(originalPair);
            allPairs.add(mirrorPair);

            log.info("ü™û –°–æ–∑–¥–∞–Ω–∞ –∑–µ—Ä–∫–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞: {} -> {}",
                    originalPair.getPairName(), mirrorPair.getPairName());
        }

        log.info("‚úÖ –°–æ–∑–¥–∞–Ω–æ {} –ø–∞—Ä —Å –∑–µ—Ä–∫–∞–ª—å–Ω—ã–º–∏ (–∏—Å—Ö–æ–¥–Ω—ã—Ö: {}, –∑–µ—Ä–∫–∞–ª—å–Ω—ã—Ö: {})",
                allPairs.size(), originalPairs.size(), originalPairs.size());

        return allPairs;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –∑–µ—Ä–∫–∞–ª—å–Ω—É—é –ø–∞—Ä—É –¥–ª—è –∏—Å—Ö–æ–¥–Ω–æ–π –ø–∞—Ä—ã
     *
     * @param originalPair –∏—Å—Ö–æ–¥–Ω–∞—è –ø–∞—Ä–∞
     * @return –∑–µ—Ä–∫–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞
     */
    private Pair createMirrorPair(Pair originalPair) {
        return Pair.builder()
                .type(PairType.STABLE)
                .status(originalPair.getStatus())
                .tickerA(originalPair.getTickerB()) // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —Ç–∏–∫–µ—Ä—ã
                .tickerB(originalPair.getTickerA())
                .pairName(originalPair.getTickerB() + "/" + originalPair.getTickerA()) // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
                .totalScore(originalPair.getTotalScore())
                .stabilityRating(originalPair.getStabilityRating())
                .isTradeable(originalPair.isTradeable())
                .dataPoints(originalPair.getDataPoints())
                .candleCount(originalPair.getCandleCount())
                .analysisTimeSeconds(originalPair.getAnalysisTimeSeconds())
                .timeframe(originalPair.getTimeframe())
                .period(originalPair.getPeriod())
                .searchDate(originalPair.getSearchDate())
                .isInMonitoring(false) // –ó–µ—Ä–∫–∞–ª—å–Ω—ã–µ –ø–∞—Ä—ã –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                .searchSettings(originalPair.getSearchSettings())
                .analysisResults(originalPair.getAnalysisResults())
                .build();
    }

    /**
     * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
     *
     * @param includeMonitoring –≤–∫–ª—é—á–∞—Ç—å –ª–∏ –ø–∞—Ä—ã –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
     * @param includeFound      –≤–∫–ª—é—á–∞—Ç—å –ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã (–Ω–µ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ)
     * @param ratings           —Å–ø–∏—Å–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (null –¥–ª—è –≤—Å–µ—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤)
     * @return —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
     */
    public List<Pair> getStablePairsWithFilters(boolean includeMonitoring, boolean includeFound, List<StabilityRating> ratings) {
        log.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥={}, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ={}, —Ä–µ–π—Ç–∏–Ω–≥–∏={}",
                includeMonitoring, includeFound, ratings);

        List<Pair> filteredPairs = pairRepository.findStablePairsWithFilters(includeMonitoring, includeFound, ratings);

        log.info("‚úÖ –ù–∞–π–¥–µ–Ω–æ {} —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏", filteredPairs.size());

        return filteredPairs;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ö–æ—Ä–æ—à–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø–∞—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ–∫–±–æ–∫—Å–æ–≤
     *
     * @param useMonitoring –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –ø–∞—Ä—ã –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
     * @param useFound      –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã
     * @return —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä —Å —Ö–æ—Ä–æ—à–∏–º–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
     */
    public List<Pair> getGoodStablePairsBySettings(boolean useMonitoring, boolean useFound) {
        List<StabilityRating> goodRatings = List.of(
                StabilityRating.MARGINAL,
                StabilityRating.GOOD,
                StabilityRating.EXCELLENT
        );

        log.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–æ—Ä–æ—à–∏—Ö —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥={}, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ={}, —Ä–µ–π—Ç–∏–Ω–≥–∏={}",
                useMonitoring, useFound, goodRatings);

        return getStablePairsWithFilters(useMonitoring, useFound, goodRatings);
    }
}