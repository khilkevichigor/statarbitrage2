package com.example.core.services;

import com.example.shared.events.UpdateUiEvent;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.stereotype.Service;

@Slf4j
@Service
@RequiredArgsConstructor
public class EventSendService {
    private final ApplicationEventPublisher applicationEventPublisher;

    public void updateUI(UpdateUiEvent event) {
        try {
            log.debug("üì° EventSendService: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ UpdateUiEvent —á–µ—Ä–µ–∑ ApplicationEventPublisher");
            log.debug("üì° EventSendService: –°–æ–±—ã—Ç–∏–µ –æ–±—ä–µ–∫—Ç: {}", event);
            log.debug("üì° EventSendService: Thread: {}", Thread.currentThread().getName());
            applicationEventPublisher.publishEvent(event);
            log.debug("‚úÖ EventSendService: –°–æ–±—ã—Ç–∏–µ UpdateUiEvent —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
        } catch (Exception e) {
            log.error("‚ùå EventSendService: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è UpdateUiEvent: {}", e.getMessage(), e);
            throw e;
        }
    }
}