package com.example.core.services;

import com.example.core.repositories.SettingsRepository;
import com.example.core.repositories.StablePairsScreenerSettingsRepository;
import com.example.shared.models.Settings;
import com.example.shared.models.StablePairsScreenerSettings;
import com.example.shared.services.TimeframeAndPeriodService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.time.LocalDateTime;
import java.util.*;
import java.util.stream.Collectors;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–∫—Ä–∏–Ω–Ω–µ—Ä–∞ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class StablePairsScreenerSettingsService {

    private final StablePairsScreenerSettingsRepository stablePairsScreenerSettingsRepository;
    private final SettingsRepository settingsRepository;
    private final TimeframeAndPeriodService timeframeAndPeriodService;

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
     */
    public List<StablePairsScreenerSettings> getAllSettings() {
        log.debug("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∫—Ä–∏–Ω–Ω–µ—Ä–∞");
        return stablePairsScreenerSettingsRepository.findAllOrderedByUsage();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ ID
     */
    public Optional<StablePairsScreenerSettings> getSettingsById(Long id) {
        log.debug("üîç –ü–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ ID: {}", id);
        return stablePairsScreenerSettingsRepository.findById(id);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å–æ–∑–¥–∞—Ç—å –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
     */
    @Transactional
    public StablePairsScreenerSettings getDefaultSettings() {
        log.debug("‚öôÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");

        List<StablePairsScreenerSettings> defaultSettingsList = stablePairsScreenerSettingsRepository.findByIsDefaultTrue();

        if (!defaultSettingsList.isEmpty()) {
            // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π —Å isDefault=true, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —ç—Ç–æ
            if (defaultSettingsList.size() > 1) {
                log.warn("‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {} –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏...", defaultSettingsList.size());

                // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å –∫–∞–∫ default, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
                StablePairsScreenerSettings keepAsDefault = defaultSettingsList.get(0);
                for (int i = 1; i < defaultSettingsList.size(); i++) {
                    StablePairsScreenerSettings duplicate = defaultSettingsList.get(i);
                    duplicate.setDefault(false);
                    stablePairsScreenerSettingsRepository.save(duplicate);
                    log.info("üîß –°–±—Ä–æ—à–µ–Ω —Ñ–ª–∞–≥ default –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {} (ID: {})", duplicate.getName(), duplicate.getId());
                }

                log.info("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏. –û—Å—Ç–∞–ª–∞—Å—å –æ–¥–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {} (ID: {})",
                        keepAsDefault.getName(), keepAsDefault.getId());
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö
                updateDefaultSettingsIfNeeded(keepAsDefault);
                return keepAsDefault;
            }

            StablePairsScreenerSettings defaultSettings = defaultSettingsList.get(0);
            log.debug("‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {}", defaultSettings.getName());
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö
            updateDefaultSettingsIfNeeded(defaultSettings);
            return defaultSettings;
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        log.info("üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∫—Ä–∏–Ω–Ω–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
        StablePairsScreenerSettings newDefault = StablePairsScreenerSettings.createDefault();
        StablePairsScreenerSettings saved = stablePairsScreenerSettingsRepository.save(newDefault);

        log.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω—ã —Å ID: {}", saved.getId());
        return saved;
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    @Transactional
    public StablePairsScreenerSettings saveSettings(StablePairsScreenerSettings settings) {
        log.info("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {}", settings.getName());

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        validateSettings(settings);

        // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Ñ–ª–∞–≥ "–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ —É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
        if (settings.isDefault()) {
            log.debug("üîÑ –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ '–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é' —É –¥—Ä—É–≥–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫");
            stablePairsScreenerSettingsRepository.resetAllDefaultFlags();
        }

        StablePairsScreenerSettings saved = stablePairsScreenerSettingsRepository.save(settings);
        log.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Å ID: {}", saved.getId());
        return saved;
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    @Transactional
    public void deleteSettings(Long id) {
        log.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å ID: {}", id);

        Optional<StablePairsScreenerSettings> settings = stablePairsScreenerSettingsRepository.findById(id);
        if (settings.isEmpty()) {
            log.warn("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å ID {} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", id);
            throw new IllegalArgumentException("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: " + id);
        }

        if (settings.get().isDefault()) {
            log.error("‚ùå –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
            throw new IllegalStateException("–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
        }

        stablePairsScreenerSettingsRepository.deleteById(id);
        log.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å ID {} —É–¥–∞–ª–µ–Ω—ã", id);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤ –∏ –ø–µ—Ä–∏–æ–¥–æ–≤
     */
    public List<StablePairsScreenerSettings> getScheduledSettings() {
        log.debug("‚è∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞");

        try {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º
            List<StablePairsScreenerSettings> originalSettings = stablePairsScreenerSettingsRepository.findByRunOnScheduleTrue();

            if (originalSettings.isEmpty()) {
                log.debug("üìã –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º");
                return originalSettings;
            }

            // –ü–æ–ª—É—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –∏ –ø–µ—Ä–∏–æ–¥—ã
            Settings globalSettings = settingsRepository.findAll().stream().findFirst()
                    .orElse(new Settings());
            List<String> allowedTimeframes = timeframeAndPeriodService.getActiveTimeframes(
                    globalSettings.getGlobalActiveTimeframes());
            List<String> allowedPeriods = timeframeAndPeriodService.getActivePeriods(
                    globalSettings.getGlobalActivePeriods());

            log.info("üåê –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —à–µ–¥—É–ª–ª–µ—Ä–∞:");
            log.info("üìä –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã: {}", allowedTimeframes);
            log.info("üìÖ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã: {}", allowedPeriods);

            // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            List<StablePairsScreenerSettings> filteredSettings = new ArrayList<>();

            for (StablePairsScreenerSettings setting : originalSettings) {
                try {
                    // –ü–µ—Ä–µ—Å–µ–∫–∞–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –≥–ª–æ–±–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º–∏
                    Set<String> settingTimeframes = setting.getSelectedTimeframesSet();
                    Set<String> validTimeframes = settingTimeframes.stream()
                            .filter(allowedTimeframes::contains)
                            .collect(Collectors.toSet());

                    // –ü–µ—Ä–µ—Å–µ–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –≥–ª–æ–±–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º–∏
                    Set<String> settingPeriods = setting.getSelectedPeriodsSet();
                    Set<String> validPeriods = settingPeriods.stream()
                            .filter(allowedPeriods::contains)
                            .collect(Collectors.toSet());

                    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–∞–ª–∏–¥–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –∏ –ø–µ—Ä–∏–æ–¥—ã
                    if (!validTimeframes.isEmpty() && !validPeriods.isEmpty()) {
                        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º–∏ –∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
                        StablePairsScreenerSettings filteredSetting = createFilteredCopy(setting,
                                validTimeframes, validPeriods);

                        filteredSettings.add(filteredSetting);

                        log.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ '{}': {} —Ç—Ñ ‚Üí {}, {} –ø–µ—Ä–∏–æ–¥–æ–≤ ‚Üí {}",
                                setting.getName(),
                                settingTimeframes.size(), validTimeframes.size(),
                                settingPeriods.size(), validPeriods.size());

                        if (!settingTimeframes.equals(validTimeframes)) {
                            log.info("üîÑ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã: {}",
                                    settingTimeframes.stream()
                                            .filter(tf -> !validTimeframes.contains(tf))
                                            .collect(Collectors.toSet()));
                        }

                        if (!settingPeriods.equals(validPeriods)) {
                            log.info("üîÑ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã: {}",
                                    settingPeriods.stream()
                                            .filter(p -> !validPeriods.contains(p))
                                            .collect(Collectors.toSet()));
                        }

                    } else {
                        log.warn("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ '{}' –∏—Å–∫–ª—é—á–µ–Ω—ã: –Ω–µ—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏",
                                setting.getName());
                        log.warn("   üìä –¢–∞–π–º—Ñ—Ä–µ–π–º—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {} vs –≥–ª–æ–±–∞–ª—å–Ω—ã–µ: {}",
                                settingTimeframes, allowedTimeframes);
                        log.warn("   üìÖ –ü–µ—Ä–∏–æ–¥—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {} vs –≥–ª–æ–±–∞–ª—å–Ω—ã–µ: {}",
                                settingPeriods, allowedPeriods);
                    }

                } catch (Exception e) {
                    log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ '{}': {}",
                            setting.getName(), e.getMessage(), e);
                }
            }

            log.info("üèÅ –ò—Ç–æ–≥–æ –¥–ª—è —à–µ–¥—É–ª–ª–µ—Ä–∞: {} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ {} –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø—Ä–æ—à–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é",
                    filteredSettings.size(), originalSettings.size());

            return filteredSettings;

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —à–µ–¥—É–ª–ª–µ—Ä–∞: {}", e.getMessage(), e);
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            return stablePairsScreenerSettingsRepository.findByRunOnScheduleTrue();
        }
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º–∏ –∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
     */
    private StablePairsScreenerSettings createFilteredCopy(StablePairsScreenerSettings original,
                                                           Set<String> validTimeframes, Set<String> validPeriods) {
        StablePairsScreenerSettings copy = new StablePairsScreenerSettings();

        // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        copy.setId(original.getId());
        copy.setName(original.getName());
        copy.setDefault(original.isDefault());
        copy.setRunOnSchedule(original.isRunOnSchedule());
        copy.setLastUsedAt(original.getLastUsedAt());
        copy.setCreatedAt(original.getCreatedAt());
        copy.setUpdatedAt(original.getUpdatedAt());

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –∏ –ø–µ—Ä–∏–æ–¥—ã
        copy.setSelectedTimeframesSet(validTimeframes);
        copy.setSelectedPeriodsSet(validPeriods);

        // –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        copy.setMinCorrelationEnabled(original.isMinCorrelationEnabled());
        copy.setMinCorrelationValue(original.getMinCorrelationValue());
        copy.setMinWindowSizeEnabled(original.isMinWindowSizeEnabled());
        copy.setMinWindowSizeValue(original.getMinWindowSizeValue());
        copy.setMaxAdfValueEnabled(original.isMaxAdfValueEnabled());
        copy.setMaxAdfValue(original.getMaxAdfValue());
        copy.setMinRSquaredEnabled(original.isMinRSquaredEnabled());
        copy.setMinRSquaredValue(original.getMinRSquaredValue());
        copy.setMaxPValueEnabled(original.isMaxPValueEnabled());
        copy.setMaxPValue(original.getMaxPValue());
        copy.setMinVolumeEnabled(original.isMinVolumeEnabled());
        copy.setMinVolumeValue(original.getMinVolumeValue());
        copy.setSearchTickersEnabled(original.isSearchTickersEnabled());
        copy.setSearchTickersSet(original.getSearchTickersSet());
        copy.setUseCache(original.getUseCache());

        return copy;
    }

    /**
     * –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ
     */
    @Transactional
    public void markAsUsed(Long settingsId) {
        log.debug("üïí –û—Ç–º–µ—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ ID: {}", settingsId);

        Optional<StablePairsScreenerSettings> settings = stablePairsScreenerSettingsRepository.findById(settingsId);
        if (settings.isPresent()) {
            StablePairsScreenerSettings s = settings.get();
            s.markAsUsed();
            stablePairsScreenerSettingsRepository.save(s);
        }
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å Map –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    public Map<String, Object> buildSearchSettingsMap(StablePairsScreenerSettings settings) {
        log.debug("üîß –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞");

        Map<String, Object> searchSettings = new HashMap<>();

        if (settings.isMinCorrelationEnabled() && settings.getMinCorrelationValue() != null) {
            searchSettings.put("minCorrelation", settings.getMinCorrelationValue());
        }

        if (settings.isMinWindowSizeEnabled() && settings.getMinWindowSizeValue() != null) {
            searchSettings.put("minWindowSize", settings.getMinWindowSizeValue().intValue());
        }

        if (settings.isMaxAdfValueEnabled() && settings.getMaxAdfValue() != null) {
            searchSettings.put("maxAdfValue", settings.getMaxAdfValue());
        }

        if (settings.isMinRSquaredEnabled() && settings.getMinRSquaredValue() != null) {
            searchSettings.put("minRSquared", settings.getMinRSquaredValue());
        }

        if (settings.isMaxPValueEnabled() && settings.getMaxPValue() != null) {
            searchSettings.put("maxPValue", settings.getMaxPValue());
        }

        if (settings.isMinVolumeEnabled() && settings.getMinVolumeValue() != null) {
            searchSettings.put("minVolume", settings.getMinVolumeValue());
        }

        if (settings.isSearchTickersEnabled() && !settings.getSearchTickersSet().isEmpty()) {
            searchSettings.put("searchTickers", settings.getSearchTickersSet());
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∞
        searchSettings.put("useCache", settings.getUseCache() != null ? settings.getUseCache() : true);

        log.debug("‚úÖ –ö–∞—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞: {}", searchSettings);
        return searchSettings;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ UI –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
     */
    public StablePairsScreenerSettings createFromUIParams(
            String name,
            Set<String> timeframes,
            Set<String> periods,
            boolean minCorrelationEnabled, Double minCorrelationValue,
            boolean minWindowSizeEnabled, Double minWindowSizeValue,
            boolean maxAdfValueEnabled, Double maxAdfValue,
            boolean minRSquaredEnabled, Double minRSquaredValue,
            boolean maxPValueEnabled, Double maxPValue,
            boolean minVolumeEnabled, Double minVolumeValue,
            boolean searchTickersEnabled, Set<String> searchTickers,
            boolean runOnSchedule,
            Boolean useCache) {

        log.debug("üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ UI –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {}", name);

        StablePairsScreenerSettings settings = new StablePairsScreenerSettings();
        settings.setName(name != null ? name : "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ " + LocalDateTime.now());
        settings.setSelectedTimeframesSet(timeframes);
        settings.setSelectedPeriodsSet(periods);
        settings.setMinCorrelationEnabled(minCorrelationEnabled);
        settings.setMinCorrelationValue(minCorrelationValue);
        settings.setMinWindowSizeEnabled(minWindowSizeEnabled);
        settings.setMinWindowSizeValue(minWindowSizeValue);
        settings.setMaxAdfValueEnabled(maxAdfValueEnabled);
        settings.setMaxAdfValue(maxAdfValue);
        settings.setMinRSquaredEnabled(minRSquaredEnabled);
        settings.setMinRSquaredValue(minRSquaredValue);
        settings.setMaxPValueEnabled(maxPValueEnabled);
        settings.setMaxPValue(maxPValue);
        settings.setMinVolumeEnabled(minVolumeEnabled);
        settings.setMinVolumeValue(minVolumeValue);
        settings.setSearchTickersEnabled(searchTickersEnabled);
        settings.setSearchTickersSet(searchTickers);
        settings.setRunOnSchedule(runOnSchedule);
        settings.setUseCache(useCache != null ? useCache : true);

        return settings;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    private void validateSettings(StablePairsScreenerSettings settings) {
        log.debug("‚úîÔ∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {}", settings.getName());

        if (settings.getName() == null || settings.getName().trim().isEmpty()) {
            throw new IllegalArgumentException("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
        if (stablePairsScreenerSettingsRepository.existsByNameIgnoreCaseAndIdNot(settings.getName(), settings.getId())) {
            throw new IllegalArgumentException("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç");
        }

        Set<String> timeframes = settings.getSelectedTimeframesSet();
        if (timeframes.isEmpty()) {
            throw new IllegalArgumentException("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∞–π–º—Ñ—Ä–µ–π–º");
        }

        Set<String> periods = settings.getSelectedPeriodsSet();
        if (periods.isEmpty()) {
            throw new IllegalArgumentException("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–µ—Ä–∏–æ–¥");
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        if (settings.isMinCorrelationEnabled() &&
                (settings.getMinCorrelationValue() == null ||
                        settings.getMinCorrelationValue() < -1.0 ||
                        settings.getMinCorrelationValue() > 1.0)) {
            throw new IllegalArgumentException("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç -1.0 –¥–æ 1.0");
        }

        if (settings.isMinWindowSizeEnabled() &&
                (settings.getMinWindowSizeValue() == null ||
                        settings.getMinWindowSizeValue() <= 0)) {
            throw new IllegalArgumentException("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
        }

        if (settings.isMinVolumeEnabled() &&
                (settings.getMinVolumeValue() == null ||
                        settings.getMinVolumeValue() <= 0)) {
            throw new IllegalArgumentException("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0");
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Ç–∏–∫–µ—Ä–æ–≤
        if (settings.isSearchTickersEnabled()) {
            Set<String> tickers = settings.getSearchTickersSet();
            if (tickers.isEmpty()) {
                throw new IllegalArgumentException("–ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º —Ñ–∏–ª—å—Ç—Ä–µ —Ç–∏–∫–µ—Ä–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–∫–µ—Ä");
            }
        }

        log.debug("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ");
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
     */
    private void updateDefaultSettingsIfNeeded(StablePairsScreenerSettings settings) {
        boolean needsUpdate = false;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º —Å "1D" –Ω–∞ "15m"
        Set<String> currentTimeframes = settings.getSelectedTimeframesSet();
        if (currentTimeframes.contains("1D") || (currentTimeframes.size() == 1 && currentTimeframes.contains("1D"))) {
            log.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å '{}' –Ω–∞ '15m'", currentTimeframes);
            settings.setSelectedTimeframesSet(Set.of("15m"));
            needsUpdate = true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥ —Å "–º–µ—Å—è—Ü" –Ω–∞ "1 –º–µ—Å—è—Ü"
        Set<String> currentPeriods = settings.getSelectedPeriodsSet();
        if (currentPeriods.contains("–º–µ—Å—è—Ü") || (currentPeriods.size() == 1 && currentPeriods.contains("–º–µ—Å—è—Ü"))) {
            log.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å '{}' –Ω–∞ '1 –º–µ—Å—è—Ü'", currentPeriods);
            settings.setSelectedPeriodsSet(Set.of("1 –º–µ—Å—è—Ü"));
            needsUpdate = true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å Min Window Size —Å–æ 100 –Ω–∞ 450
        if (settings.getMinWindowSizeValue() != null && settings.getMinWindowSizeValue().equals(100.0)) {
            log.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Min Window Size –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å {} –Ω–∞ 450", settings.getMinWindowSizeValue());
            settings.setMinWindowSizeValue(450.0);
            needsUpdate = true;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–∫–ª—é—á–∏—Ç—å Min Volume –∏ –æ–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
        if (!settings.isMinVolumeEnabled() || 
            (settings.getMinVolumeValue() != null && settings.getMinVolumeValue() < 50.0)) {
            log.info("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Min Volume: enabled={} -> true, value={} -> 50", 
                    settings.isMinVolumeEnabled(), settings.getMinVolumeValue());
            settings.setMinVolumeEnabled(true);
            settings.setMinVolumeValue(50.0);
            needsUpdate = true;
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏
        if (needsUpdate) {
            try {
                stablePairsScreenerSettingsRepository.save(settings);
                log.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π");
            } catch (Exception e) {
                log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {}", e.getMessage(), e);
            }
        }
    }
}