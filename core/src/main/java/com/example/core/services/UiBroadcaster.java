package com.example.core.services;

import com.example.shared.events.UpdateUiEvent;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.server.Command;
import com.vaadin.flow.shared.Registration;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import java.util.LinkedList;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.function.Consumer;

/**
 * Broadcaster –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏–π –≤–æ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ Vaadin UI
 */
@Slf4j
@Service
public class UiBroadcaster {
    
    private static final Executor executor = Executors.newSingleThreadExecutor();
    private static final LinkedList<Consumer<String>> listeners = new LinkedList<>();

    public static synchronized Registration register(Consumer<String> listener) {
        log.debug("üì° UiBroadcaster: –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π UI listener");
        listeners.add(listener);

        return () -> {
            log.debug("üì° UiBroadcaster: –£–¥–∞–ª—è–µ–º UI listener");
            synchronized (UiBroadcaster.class) {
                listeners.remove(listener);
            }
        };
    }

    public static synchronized void broadcast(String message) {
        log.info("üì° UiBroadcaster: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ UI ({}): {}", listeners.size(), message);
        for (Consumer<String> listener : listeners) {
            executor.execute(() -> {
                try {
                    listener.accept(message);
                } catch (Exception e) {
                    log.error("‚ùå UiBroadcaster: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ UI: {}", e.getMessage(), e);
                }
            });
        }
    }

    @EventListener
    public void handleUpdateUi(UpdateUiEvent event) {
        try {
            log.info("üì° UiBroadcaster: –ü–û–õ–£–ß–ï–ù–û —Å–æ–±—ã—Ç–∏–µ UpdateUiEvent - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º broadcast");
            log.info("üì° UiBroadcaster: Thread: {}", Thread.currentThread().getName());
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ UI
            broadcast("STABLE_PAIRS_UPDATE");
            
        } catch (Exception e) {
            log.error("‚ùå UiBroadcaster: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è UpdateUiEvent: {}", e.getMessage(), e);
        }
    }
}