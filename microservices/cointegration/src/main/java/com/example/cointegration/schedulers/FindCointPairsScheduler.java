package com.example.cointegration.schedulers;

import com.example.cointegration.messaging.SendEventService;
import com.example.cointegration.processors.FetchCointPairsProcessor;
import com.example.cointegration.service.SettingsService;
import com.example.shared.events.rabbit.CointegrationEvent;
import com.example.shared.models.Pair;
import com.example.shared.models.Settings;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@Component
@RequiredArgsConstructor
public class FindCointPairsScheduler {
    private final SettingsService settingsService;
    private final FetchCointPairsProcessor fetchCointPairsProcessor;
    private final SendEventService sendEventService;

    //todo 1—Ä–∞–∑/–º–∏–Ω –Ω–æ –µ—Å–ª–∏ –¢–§=15–º–∏ —Ç–æ 15 —Ä–∞–∑ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ª–æ–≥ —Å —Ç–µ–º –∂–µ zScore! –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ –ø–æ –¢–§ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –ª–∏—à–Ω–∏–µ –∑–∞—Ö–æ–¥—ã —à–µ–¥—É–ª–ª–µ—Ä–∞
    @Scheduled(cron = "0 */1 * * * *")
    public void maintainCointPairs() {
        long schedulerStart = System.currentTimeMillis();

        log.info("üîÑ –®–µ–¥—É–ª–ª–µ—Ä –ø–æ–∏—Å–∫–∞ –∫–æ–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ä –∑–∞–ø—É—â–µ–Ω...");
        Settings settings = settingsService.getSettings();
        if (settings == null || !settings.isAutoTradingEnabled()) {
            return;
        }

        log.info("üÜï –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–±–æ—Ä...");
        List<Pair> cointPairs = fetchCointPairsProcessor.fetchCointPairs();
        if (cointPairs.isEmpty()) {
            log.warn("‚ö†Ô∏è –û—Ç–æ–±—Ä–∞–Ω–æ 0 –ø–∞—Ä!");
            return;
        }
        log.info("–û—Ç–æ–±—Ä–∞–Ω–æ {} –ø–∞—Ä", cointPairs.size());

        long duration = System.currentTimeMillis() - schedulerStart;
        log.info("‚è±Ô∏è –®–µ–¥—É–ª–ª–µ—Ä –ø–æ–∏—Å–∫–∞ –∫–æ–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç—É –∑–∞ {} —Å–µ–∫. –ù–∞–π–¥–µ–Ω–æ {} –Ω–æ–≤—ã—Ö –ø–∞—Ä", duration / 1000.0, cointPairs.size());

        if (!cointPairs.isEmpty()) {
            log.info("");
            log.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–∞—Ä –≤ —Åore –º—Å...");
            sendEventService.sendCointegrationEvent(new CointegrationEvent(cointPairs, CointegrationEvent.Type.NEW_COINT_PAIRS));
            log.info("–ü–∞—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.");
        }
    }
}