server:
  port: 8081
  servlet:
    session:
      timeout: 30m

spring:
  application:
    name: notification-service

  profiles:
    active: default

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

  jackson:
    time-zone: UTC

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}

  cloud:
    stream:
      bindings:
        notificationEventsConsumer-in-0:
          destination: notification.events
          content-type: application/json
          group: notification-group
      rabbit:
        bindings:
          notificationEventsConsumer-in-0:
            consumer:
              routing-key-expression: "'notification'"

telegram:
  bot:
    name: ${TELEGRAM_BOT_NAME:@stat_arbitrage_bot}
    token: ${TELEGRAM_BOT_TOKEN:7660742650:AAFTi_rfdfcuMk9B4qxGmOUMU-1x2Tpc3cs}
    owner:
      chat:
        id: ${TELEGRAM_BOT_OWNER_CHAT_ID:159178617}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.notification: INFO