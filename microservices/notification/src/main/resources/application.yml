#server:
#  port: 8081
#
#spring:
#  application:
#    name: notification-service
#
#  profiles:
#    active: default
#
#  autoconfigure:
#    exclude:
#      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
#
#  cloud:
#    stream:
#      bindings:
#        # Входящие события уведомлений
#        notificationEventsConsumer-in-0:
#          destination: notification.events
#          content-type: application/json
#          group: notification-group
#
#      rabbit:
#        bindings:
#          notificationEventsConsumer-in-0:
#            consumer:
#              routing-key-expression: "'notification'"
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info
#  endpoint:
#    health:
#      show-details: always
#
#logging:
#  level:
#    com.example.notification: INFO
#    org.springframework.cloud.stream: DEBUG
#  pattern:
#    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [NOTIFICATION] %logger{36} - %msg%n"
#
## Telegram Bot настройки (заглушка)
#telegram:
#  bot:
#    token: "${TELEGRAM_BOT_TOKEN:YOUR_BOT_TOKEN}"
#    username: "${TELEGRAM_BOT_USERNAME:your_bot_username}"

server:
  port: 8081
  servlet:
    session:
      timeout: 30m

spring:
  application:
    name: notification-service

  profiles:
    active: default

  datasource:
    driver-class-name: org.sqlite.JDBC
    url: ${DB_URL:jdbc:sqlite:./data/sa-db.sqlite}
    username: ${DB_USERNAME:}
    password: ${DB_PASSWORD:}
    generate-unique-name: false

  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    properties:
      hibernate:
        validator.apply_to_ddl: false
        hbm2ddl.auto: none

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

  jackson:
    time-zone: UTC

  rabbitmq:
    host: localhost
    port: 5672
    username: statarbitrage
    password: statarbitrage123

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false

  cloud:
    stream:
      bindings:
        notificationEventsConsumer-in-0:
          destination: notification.events
          content-type: application/json
          group: notification-group
      rabbit:
        bindings:
          notificationEventsConsumer-in-0:
            consumer:
              routing-key-expression: "'notification'"

telegram:
  bot:
    name: ${TELEGRAM_BOT_NAME:@stat_arbitrage_bot}
    token: ${TELEGRAM_BOT_TOKEN:7660742650:AAFTi_rfdfcuMk9B4qxGmOUMU-1x2Tpc3cs}
    owner:
      chat:
        id: ${TELEGRAM_BOT_OWNER_CHAT_ID:159178617}

okx:
  api:
    key: ${OKX_API_KEY:}
    secret: ${OKX_API_SECRET:}
    passphrase: ${OKX_API_PASSPHRASE:}
    sandbox: ${OKX_API_SANDBOX:true}

cointegration:
  api:
    url: http://localhost:8000

vaadin:
  productionMode: false
  excludeFromServletContext: true
  launch-browser: true
  urlMapping: /
  allowed-packages: /com/example/statarbitrage/vaadin

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.notification: INFO
    org.springframework.cloud.stream: DEBUG
    com.example.statarbitrage.client_python.PythonRestClient: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [NOTIFICATION] %logger{36} - %msg%n"
