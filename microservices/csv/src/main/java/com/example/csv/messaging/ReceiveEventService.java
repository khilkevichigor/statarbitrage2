package com.example.csv.messaging;

import com.example.csv.service.CsvExportService;
import com.example.shared.events.rabbit.CoreEvent;
import com.example.shared.models.Pair;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Service;

import java.util.function.Consumer;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class ReceiveEventService {
    private final CsvExportService csvExportService;

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
     */
    @Bean
    public Consumer<CoreEvent> coreEventsConsumer() {
        return this::handleEvent;
    }

    private void handleEvent(CoreEvent event) {
        log.info("üìÑ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: {}", event.toString());

        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            switch (event.getType()) {
                case ADD_CLOSED_TO_CSV:
                    addToCsv(event.getTradingPair());
                    break;
                default:
                    log.warn("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –¥–ª—è CSV —ç–∫—Å–ø–æ—Ä—Ç–∞: {}", event.getEventType());
            }
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    private void addToCsv(Pair tradingPair) {
        log.info("üìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ–π –ø–∞—Ä—ã –≤ CSV");

        try {
            csvExportService.addClosedPairToCsv(tradingPair);
            log.info("–ü–∞—Ä–∞ {} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ csv —Ñ–∞–π–ª.", tradingPair.getPairName());
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä—ã –≤ CSV: {}", e.getMessage(), e);
        }
    }
}