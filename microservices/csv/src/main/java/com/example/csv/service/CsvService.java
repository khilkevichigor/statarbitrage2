package com.example.csv.service;

import com.example.shared.events.CsvEvent;
import com.example.shared.models.TradingPair;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Service;

import java.util.function.Consumer;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–æ—Ä–º–∞—Ç
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class CsvService {
    private final AppendPairDataToCsvService appendPairDataToCsvService;

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV
     */
    @Bean
    public Consumer<CsvEvent> csvEventsConsumer() {
        return this::handleCsvExportEvent;
    }

    private void handleCsvExportEvent(CsvEvent event) {
        log.info("üìÑ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ CSV: {}", event.getEventType());

        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            switch (event.getEventType()) {
                case "EXPORT_TRADES":
                    exportTradesToCsv(event);
                    break;
                case "EXPORT_PORTFOLIO":
                    exportPortfolioToCsv(event);
                    break;
                case "EXPORT_ANALYTICS":
                    exportAnalyticsToCsv(event);
                    break;
                case "EXPORT_CUSTOM_REPORT":
                    exportCustomReportToCsv(event);
                    break;
                case "EXPORT_PAIR_DATA_REPORT":
                    exportPairDataReportToCsv(event);
                    break;
                default:
                    log.warn("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –¥–ª—è CSV —ç–∫—Å–ø–æ—Ä—Ç–∞: {}", event.getEventType());
            }
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    private void exportPairDataReportToCsv(CsvEvent event) {
        log.info("üìã –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV");

        try {
            TradingPair tradingPair = event.getTradingPair();
            appendPairDataToCsvService.appendPairDataToCsv(tradingPair);
            log.info("PairData {} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ csv —Ñ–∞–π–ª.", tradingPair.getPairName());
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV
     */
    private void exportTradesToCsv(CsvEvent event) {
        log.info("üìä –≠–∫—Å–ø–æ—Ä—Ç —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV");

        try {
            // –õ–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            String filename = generateTradesCsvFilename();
            log.info("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–¥–µ–ª–æ–∫: {}", filename);

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è CSV —Ñ–∞–π–ª–∞ —Å–æ —Å–¥–µ–ª–∫–∞–º–∏
            writeTradesToCsv(filename, event);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Å–¥–µ–ª–æ–∫ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ CSV
     */
    private void exportPortfolioToCsv(CsvEvent event) {
        log.info("üíº –≠–∫—Å–ø–æ—Ä—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ CSV");

        try {
            String filename = generatePortfolioCsvFilename();
            log.info("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è: {}", filename);

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è CSV —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
            writePortfolioToCsv(filename, event);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ CSV: {}", e.getMessage(), e);
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ CSV
     */
    private void exportAnalyticsToCsv(CsvEvent event) {
        log.info("üìà –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ CSV");

        try {
            String filename = generateAnalyticsCsvFilename();
            log.info("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {}", filename);

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è CSV —Ñ–∞–π–ª–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            writeAnalyticsToCsv(filename, event);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV
     */
    private void exportCustomReportToCsv(CsvEvent event) {
        log.info("üìã –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV");

        try {
            String filename = generateCustomReportCsvFilename(event);
            log.info("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {}", filename);

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è CSV —Ñ–∞–π–ª–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            writeCustomReportToCsv(filename, event);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV: {}", e.getMessage(), e);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–¥–µ–ª–æ–∫
     */
    private String generateTradesCsvFilename() {
        return String.format("closed_trades_%s.csv",
                java.time.LocalDateTime.now().format(
                        java.time.format.DateTimeFormatter.ofPattern("MM_dd_yyyy_HH_mm")
                ));
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è
     */
    private String generatePortfolioCsvFilename() {
        return String.format("portfolio_%s.csv",
                java.time.LocalDateTime.now().format(
                        java.time.format.DateTimeFormatter.ofPattern("MM_dd_yyyy_HH_mm")
                ));
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
     */
    private String generateAnalyticsCsvFilename() {
        return String.format("analytics_%s.csv",
                java.time.LocalDateTime.now().format(
                        java.time.format.DateTimeFormatter.ofPattern("MM_dd_yyyy_HH_mm")
                ));
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞
     */
    private String generateCustomReportCsvFilename(CsvEvent event) {
        String reportType = "custom"; // –¢–∞–∫ –∫–∞–∫ –≤ TradingEvent –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ getData()
        return String.format("%s_report_%s.csv", reportType,
                java.time.LocalDateTime.now().format(
                        java.time.format.DateTimeFormatter.ofPattern("MM_dd_yyyy_HH_mm")
                ));
    }

    /**
     * –ó–∞–ø–∏—Å—å —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
     */
    private void writeTradesToCsv(String filename, CsvEvent event) {
        log.debug("‚úçÔ∏è –ó–∞–ø–∏—Å—å —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª: {}", filename);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
    }

    /**
     * –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ CSV —Ñ–∞–π–ª
     */
    private void writePortfolioToCsv(String filename, CsvEvent event) {
        log.debug("‚úçÔ∏è –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ —Ñ–∞–π–ª: {}", filename);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
    }

    /**
     * –ó–∞–ø–∏—Å—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
     */
    private void writeAnalyticsToCsv(String filename, CsvEvent event) {
        log.debug("‚úçÔ∏è –ó–∞–ø–∏—Å—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª: {}", filename);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
    }

    /**
     * –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ CSV —Ñ–∞–π–ª
     */
    private void writeCustomReportToCsv(String filename, CsvEvent event) {
        log.debug("‚úçÔ∏è –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–∞–π–ª: {}", filename);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª
    }
}