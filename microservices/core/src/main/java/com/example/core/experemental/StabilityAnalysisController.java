package com.example.core.experemental;

import com.example.core.client.CandlesFeignClient;
import com.example.core.experemental.stability.dto.StabilityRequestDto;
import com.example.core.experemental.stability.dto.StabilityResponseDto;
import com.example.core.experemental.stability.service.StabilityAnalysisService;
import com.example.core.services.SettingsService;
import com.example.shared.dto.Candle;
import com.example.shared.dto.CandlesRequest;
import com.example.shared.models.Settings;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/stability")
@RequiredArgsConstructor
@Slf4j
public class StabilityAnalysisController {

    private final StabilityAnalysisService stabilityAnalysisService;
    private final CandlesFeignClient candlesFeignClient;
    private final SettingsService settingsService;

    /**
     * –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ä
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ç–∏–∫–µ—Ä—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤ Python
     */
    @GetMapping("/analyze-all-pairs")
    public ResponseEntity<StabilityResponseDto> analyzeAllPairsStability() {
        log.info("üîç –ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–∞—Ä...");
        
        long startTime = System.currentTimeMillis();
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã
            Settings settings = settingsService.getSettings();
            log.info("üìã –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: minWindowSize={}, minCorr={}", 
                    settings.getMinWindowSize(), settings.getMinCorrelation());
            
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–≤–µ—á–∏ –¥–ª—è –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤ (–±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π)
            Map<String, List<Candle>> candlesMap = getAllAvailableCandles(settings);
            
            if (candlesMap.isEmpty()) {
                log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–≤–µ—á–µ–π");
                return ResponseEntity.badRequest().build();
            }
            
            log.info("üìä –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è {} —Ç–∏–∫–µ—Ä–æ–≤: {}", 
                    candlesMap.size(), String.join(", ", candlesMap.keySet()));
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Map –¥–ª—è Python API
            Map<String, Object> settingsMap = convertSettingsToMap(settings);
            
            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è Python API
            StabilityRequestDto request = new StabilityRequestDto(candlesMap, settingsMap);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            StabilityResponseDto response = stabilityAnalysisService.analyzeStability(request);
            
            long totalTime = System.currentTimeMillis() - startTime;
            log.info("‚úÖ –ê–Ω–∞–ª–∏–∑ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {} —Å–µ–∫—É–Ω–¥. –ù–∞–π–¥–µ–Ω–æ —Ç–æ—Ä–≥—É–µ–º—ã—Ö –ø–∞—Ä: {}/{}", 
                    totalTime / 1000.0, 
                    response.getTradeablePairsFound(), 
                    response.getTotalPairsAnalyzed());
            
            return ResponseEntity.ok(response);
            
        } catch (Exception e) {
            long totalTime = System.currentTimeMillis() - startTime;
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ (–≤—Ä–µ–º—è: {}—Å): {}", 
                    totalTime / 1000.0, e.getMessage(), e);
            return ResponseEntity.internalServerError().build();
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–≤–µ—á–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π (–∫–∞–∫ –≤ FetchPairsProcessor)
     */
    private Map<String, List<Candle>> getAllAvailableCandles(Settings settings) {
        try {
            // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –ë–ï–ó —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤ - –ø–æ–ª—É—á–∞–µ–º –í–°–ï –¥–æ—Å—Ç—É–ø–Ω—ã–µ
            CandlesRequest candlesRequest = new CandlesRequest(settings, null);
            
            long start = System.currentTimeMillis();
            Map<String, List<Candle>> candlesMap = candlesFeignClient.getApplicableCandlesMap(candlesRequest);
            long elapsed = System.currentTimeMillis() - start;
            
            log.info("üìà –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–≤–µ—á–µ–π –¥–ª—è {} —Ç–∏–∫–µ—Ä–æ–≤ –∑–∞ {} —Å–µ–∫", 
                    candlesMap.size(), String.format("%.2f", elapsed / 1000.0));
            
            return candlesMap;
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–µ—á–µ–π: {}", e.getMessage(), e);
            return new HashMap<>();
        }
    }
    
    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç Settings –≤ Map –¥–ª—è Python API –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
     * Python StabilityAnalyzer –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ minWindowSize –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    private Map<String, Object> convertSettingsToMap(Settings settings) {
        Map<String, Object> map = new HashMap<>();
        
        // –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Python StabilityAnalyzer
        map.put("minWindowSize", (int) settings.getMinWindowSize());
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è
        map.put("minCorrelation", settings.getMinCorrelation());
        map.put("maxPValue", settings.getMaxPValue());
        map.put("maxAdfValue", settings.getMaxAdfValue());
        map.put("minRSquared", settings.getMinRSquared());
        map.put("minZ", settings.getMinZ());
        map.put("candleLimit", (int) settings.getCandleLimit());
        map.put("timeframe", settings.getTimeframe());
        
        log.info("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Python –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏: minWindowSize={}, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã", 
                (int) settings.getMinWindowSize());
        return map;
    }
}