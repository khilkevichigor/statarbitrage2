package com.example.core.services;

import com.example.shared.models.Settings;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–µ–¥—É–ª–ª–µ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤–∫–ª/–æ—Ç–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è —à–µ–¥—É–ª–ª–µ—Ä–æ–≤
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class SchedulerControlService {

    private final SettingsService settingsService;

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è UpdateTradesScheduler (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)
     */
    public boolean isUpdateTradesSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerUpdateTradesEnabled();
            boolean result = enabled != null ? enabled : true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω –µ—Å–ª–∏ null
            log.debug("üìÖ UpdateTradesScheduler: {}", result ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
            return result;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è UpdateTradesScheduler: {}", e.getMessage());
            return true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è StablePairsScheduler (–ø–æ–∏—Å–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø–∞—Ä –Ω–æ—á—å—é)
     */
    public boolean isStablePairsSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerStablePairsEnabled();
            boolean result = enabled != null ? enabled : true;
            log.debug("üìÖ StablePairsScheduler: {}", result ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
            return result;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è StablePairsScheduler: {}", e.getMessage());
            return true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è Portfolio Snapshot Scheduler (—Å–Ω–∞–ø—à–æ—Ç –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç)
     */
    public boolean isPortfolioSnapshotSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerPortfolioSnapshotEnabled();
            boolean result = enabled != null ? enabled : true;
            log.debug("üìÖ PortfolioSnapshotScheduler: {}", result ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
            return result;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è PortfolioSnapshotScheduler: {}", e.getMessage());
            return true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è Portfolio Cleanup Scheduler (–æ—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00)
     */
    public boolean isPortfolioCleanupSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerPortfolioCleanupEnabled();
            boolean result = enabled != null ? enabled : true;
            log.debug("üìÖ PortfolioCleanupScheduler: {}", result ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
            return result;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è PortfolioCleanupScheduler: {}", e.getMessage());
            return true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å CRON –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è StablePairsScheduler
     */
    public String getStablePairsSchedulerCron() {
        try {
            Settings settings = settingsService.getSettings();
            String cron = settings.getSchedulerStablePairsCron();
            log.debug("üìÖ StablePairsScheduler CRON: {}", cron);
            return cron != null ? cron : "0 10 1 * * *"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 02:10
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ CRON –¥–ª—è StablePairsScheduler: {}", e.getMessage());
            return "0 10 1 * * *"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å CRON –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è Portfolio Cleanup Scheduler
     */
    public String getPortfolioCleanupSchedulerCron() {
        try {
            Settings settings = settingsService.getSettings();
            String cron = settings.getSchedulerPortfolioCleanupCron();
            log.debug("üìÖ PortfolioCleanupScheduler CRON: {}", cron);
            return cron != null ? cron : "0 0 2 * * ?"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 02:00
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ CRON –¥–ª—è PortfolioCleanupScheduler: {}", e.getMessage());
            return "0 0 2 * * ?"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        }
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ—Ö —à–µ–¥—É–ª–ª–µ—Ä–æ–≤
     */
    public void logSchedulersStatus() {
        log.info("üìÖ === –°–û–°–¢–û–Ø–ù–ò–ï –®–ï–î–£–õ–õ–ï–†–û–í ===");
        log.info("üìÖ UpdateTradesScheduler (–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É): {}", 
                isUpdateTradesSchedulerEnabled() ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
        log.info("üìÖ StablePairsScheduler ({}): {}", 
                getStablePairsSchedulerCron(),
                isStablePairsSchedulerEnabled() ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
        log.info("üìÖ PortfolioSnapshotScheduler (–∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç): {}", 
                isPortfolioSnapshotSchedulerEnabled() ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
        log.info("üìÖ PortfolioCleanupScheduler ({}): {}", 
                getPortfolioCleanupSchedulerCron(),
                isPortfolioCleanupSchedulerEnabled() ? "–í–ö–õ–Æ–ß–ï–ù" : "–û–¢–ö–õ–Æ–ß–ï–ù");
        log.info("üìÖ ================================");
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –ª—é–±—ã—Ö —à–µ–¥—É–ª–ª–µ—Ä–æ–≤ –¥–ª—è Candles –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏)
     */
    public boolean isCandleCacheSyncSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerCandleCacheSyncEnabled();
            return enabled != null ? enabled : true;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è CandleCacheSyncScheduler: {}", e.getMessage());
            return true;
        }
    }

    public boolean isCandleCacheUpdateSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerCandleCacheUpdateEnabled();
            return enabled != null ? enabled : true;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è CandleCacheUpdateScheduler: {}", e.getMessage());
            return true;
        }
    }

    public boolean isCandleCacheStatsSchedulerEnabled() {
        try {
            Settings settings = settingsService.getSettings();
            Boolean enabled = settings.getSchedulerCandleCacheStatsEnabled();
            return enabled != null ? enabled : true;
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è CandleCacheStatsScheduler: {}", e.getMessage());
            return true;
        }
    }
}