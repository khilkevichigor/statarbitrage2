package com.example.core.services;

import com.example.core.client_python.PythonRestClient;
import com.example.shared.dto.Candle;
import com.example.shared.dto.ZScoreData;
import com.example.shared.models.Settings;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Python API –∞–Ω–∞–ª–∏–∑–∞
 * –ò–∑–æ–ª–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤—ã Python API –æ—Ç –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class PythonAnalysisService {

    private final PythonRestClient pythonRestClient;

    /**
     * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∞—Ä—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ZScore –¥–∞–Ω–Ω—ã–µ
     */
    public ZScoreData calculateZScoreData(Settings settings, Map<String, List<Candle>> candlesMap) {
        log.info("üêç –í—ã–∑—ã–≤–∞–µ–º Python API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ä—ã. –¢–∏–∫–µ—Ä—ã: {}", candlesMap.keySet());
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ Python
        ZScoreData zScoreData = pythonRestClient.analyzePair(candlesMap, settings, true);
        if (zScoreData == null) {
            log.warn("‚ö†Ô∏è Python API –≤–µ—Ä–Ω—É–ª null –¥–ª—è —Ç–∏–∫–µ—Ä–æ–≤: {}", candlesMap.keySet());
            return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤–º–µ—Å—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è Z-Score —Ä–∞—Å—á–µ—Ç–æ–≤
        }

        log.info("‚úÖ Python API —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª ZScoreData –¥–ª—è —Ç–∏–∫–µ—Ä–æ–≤: {}", candlesMap.keySet());
        return zScoreData;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç ZScore –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä
     */
    public List<ZScoreData> fetchZScoreData(Settings settings, Map<String, List<Candle>> candlesMap) {
        return pythonRestClient.fetchZScoreData(settings, candlesMap);
    }
}