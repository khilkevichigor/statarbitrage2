package com.example.core.messaging;

import com.example.core.handlers.NewCointPairsEventHandler;
import com.example.shared.events.rabbit.CointegrationEvent;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Service;

import java.util.function.Consumer;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class ReceiveEventService {
    private final NewCointPairsEventHandler newCointPairsEventHandler;

    /**
     * –í—ã—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ø–∏–∫ –ö–æ–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
     */
    @Bean
    public Consumer<CointegrationEvent> cointegrationEventsConsumer() {
        return this::handleEvent;
    }

    //todo —Å–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫—É "–¢–æ—Ä–≥–æ–≤–∞—Ç—å" –¥–ª—è –Ω–∞–±–ª—é–¥–∞–µ–º—ã—Ö –ø–∞—Ä - –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ BTC-ETH –≤ —Ç–æ—Ä–≥–æ–≤–ª—é! –ò–ª–∏ –∂–µ —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Ö—Ç–ê—Ä–µ–∞ –¥–ª—è –û—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã –ø–æ
    // –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ù–∞–±–ª—é–¥–∞–µ–º—ã–º–∏! –ò–ª–∏ –∂–µ —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Ö—Ç–ê—Ä–µ–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á—Ç–æ –±—ã —É–∫–∞–∑—ã–≤–∞—Ç—å –ø–∞—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –Ω–∞ —Ç–æ—Ä–≥–æ–≤–ª—é.

    //todo —Å–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

    private void handleEvent(CointegrationEvent event) {
        log.info("");
        log.info("üìÑ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: {}", event.getEventType());
        event.getCointPairs().forEach(v -> log.info("{} z={}", v.getPairName(), v.getZScoreCurrent()));
        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π
            switch (event.getType()) {
                case NEW_COINT_PAIRS:
                    newCointPairsEventHandler.handle(event);
                    break;
                default:
                    log.warn("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è: {}", event.getEventType());
            }
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è: {}", e.getMessage(), e);
        }
    }
}