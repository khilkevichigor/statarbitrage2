server:
  port: 8091
  servlet:
    session:
      timeout: 30m
  tomcat:
    max-http-form-post-size: 10MB
    max-swallow-size: 10MB
    threads:
      max: 30  # Уменьшено для экономии памяти при больших объемах

spring:
  application:
    name: candles-service
  # Database configuration for candle caching (PostgreSQL)
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5432/statarbitrage}
    username: ${DB_USERNAME:statuser}
    password: ${DB_PASSWORD:statpass123}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 100
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    show-sql: false

  profiles:
    active: default

  jackson:
    time-zone: UTC

  rabbitmq:
    host: localhost
    port: 5672
    username: statarbitrage
    password: statarbitrage123

  cloud:
    compatibility-verifier:
      enabled: false
    stream:
      bindings:
        csvEventsConsumer-in-0:
          destination: candles.events
          content-type: application/json
          group: candles-group
      rabbit:
        bindings:
          candlesEventsConsumer-in-0:
            consumer:
              routing-key-expression: "'candles'"

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.candles: INFO

# Настройки кэша свечей
app:
  candle-cache:
    enabled: true
    default-exchange: OKX
    preload-enabled: true
    daily-update-enabled: true
    startup-check: true
    thread-pool-size: 5  # Уменьшено для экономии памяти при OutOfMemoryError