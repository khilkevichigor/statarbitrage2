#!/bin/bash

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã StatArbitrage..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP endpoint
check_endpoint() {
    local url=$1
    local service=$2
    
    response=$(curl -s -w "%{http_code}" -o /dev/null $url)
    
    if [ $response -eq 200 ]; then
        echo -e "${GREEN}‚úÖ $service - OK ($url)${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $service - FAIL ($url) - HTTP $response${NC}"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
echo -e "${BLUE}üî® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏...${NC}"
mvn clean compile -q
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${BLUE}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
mvn dependency:tree -q > /dev/null
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã${NC}"
else
    echo -e "${RED}‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${BLUE}üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

required_dirs=("shared" "core" "notification" "analytics" "default")
for dir in "${required_dirs[@]}"; do
    if [ -d "$dir" ]; then
        echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "${BLUE}üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"

required_files=("pom.xml" "docker-compose.yml" "start-all.sh" "stop-all.sh" "README.md")
for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ –§–∞–π–ª $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Java —Ñ–∞–π–ª–æ–≤
echo -e "${BLUE}‚òï –ü—Ä–æ–≤–µ—Ä–∫–∞ Java —Ñ–∞–π–ª–æ–≤...${NC}"

if [ -f "shared/src/main/java/com/example/shared/events/BaseEvent.java" ]; then
    echo -e "${GREEN}‚úÖ BaseEvent.java –Ω–∞–π–¥–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå BaseEvent.java –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

if [ -f "core/src/main/java/com/example/core/CoreApplication.java" ]; then
    echo -e "${GREEN}‚úÖ CoreApplication.java –Ω–∞–π–¥–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå CoreApplication.java –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
echo -e "${BLUE}‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${NC}"

config_files=("core/src/main/resources/application.yml" "notification/src/main/resources/application.yml")
for file in "${config_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è $file –Ω–∞–π–¥–µ–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è $file –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ YAML —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω yamllint)
if command -v yamllint &> /dev/null; then
    echo -e "${BLUE}üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ YAML...${NC}"
    for file in $(find . -name "*.yml" -o -name "*.yaml"); do
        yamllint -d relaxed $file > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úÖ YAML —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $file${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ YAML: $file${NC}"
        fi
    done
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Maven –º–æ–¥—É–ª–µ–π
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ Maven –º–æ–¥—É–ª–µ–π...${NC}"

modules=("shared" "core" "notification" "analytics" "csv" "ui" "database" "cointegration" "trading" "okx" "3commas" "python" "changes" "processors" "candles" "backtesting" "chart" "statistics" "default")

for module in "${modules[@]}"; do
    if [ -f "$module/pom.xml" ]; then
        echo -e "${GREEN}‚úÖ Maven –º–æ–¥—É–ª—å $module –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå Maven –º–æ–¥—É–ª—å $module –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    fi
done

# –¢–µ—Å—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
echo -e "${BLUE}üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –º–æ–¥—É–ª–µ–π...${NC}"

for module in "shared" "core" "notification" "analytics" "default"; do
    echo -e "${YELLOW}üîÑ –ö–æ–º–ø–∏–ª—è—Ü–∏—è $module...${NC}"
    cd $module
    mvn compile -q > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $module —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ $module${NC}"
    fi
    cd ..
done

echo ""
echo -e "${BLUE}üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:${NC}"
echo "=================================="

# –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
total_services=19
created_services=$(ls -d */ | grep -v target | wc -l)

echo -e "${BLUE}üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
echo "- –í—Å–µ–≥–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤: $total_services"
echo "- –°–æ–∑–¥–∞–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: $created_services"
echo "- Docker Compose: –≥–æ—Ç–æ–≤"
echo "- –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –≥–æ—Ç–æ–≤—ã"
echo "- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –≥–æ—Ç–æ–≤–∞"

echo ""
echo -e "${GREEN}üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "${BLUE}üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./start-all.sh${NC}"
echo ""