package com.example.ui.service;

import com.example.shared.events.TradingEvent;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Service;

import java.util.function.Consumer;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */
@Slf4j
@Service
public class UiService {

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
     */
    @Bean
    public Consumer<TradingEvent> processUiUpdateEvent() {
        return this::handleUiUpdateEvent;
    }

    private void handleUiUpdateEvent(TradingEvent event) {
        log.info("üåê –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI: {}", event);
        
        try {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è UI
            switch (event.getEventType()) {
                case "TRADE_UPDATE":
                    updateTradeInUI(event);
                    break;
                case "PORTFOLIO_UPDATE":
                    updatePortfolioInUI(event);
                    break;
                case "CHART_UPDATE":
                    updateChartInUI(event);
                    break;
                case "PRICE_UPDATE":
                    updatePriceInUI(event);
                    break;
                case "NOTIFICATION_UPDATE":
                    showNotificationInUI(event);
                    break;
                default:
                    log.warn("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –¥–ª—è UI: {}", event.getEventType());
            }
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    private void updateTradeInUI(TradingEvent event) {
        log.info("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≤ UI: {}", event.getSymbol());
        
        try {
            // –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            sendWebSocketUpdate("trade-update", event);
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –≤ UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    private void updatePortfolioInUI(TradingEvent event) {
        log.info("üíº –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ UI");
        
        try {
            // –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            sendWebSocketUpdate("portfolio-update", event);
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    private void updateChartInUI(TradingEvent event) {
        log.info("üìà –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ UI: {}", event.getSymbol());
        
        try {
            // –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            sendWebSocketUpdate("chart-update", event);
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    private void updatePriceInUI(TradingEvent event) {
        log.debug("üíπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –≤ UI: {}", event.getSymbol());
        
        try {
            // –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            sendWebSocketUpdate("price-update", event);
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –≤ UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
     */
    private void showNotificationInUI(TradingEvent event) {
        log.info("üì¢ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ UI");
        
        try {
            // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            sendWebSocketUpdate("notification", event);
            
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ UI: {}", e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket
     */
    private void sendWebSocketUpdate(String updateType, TradingEvent event) {
        log.debug("üîå –û—Ç–ø—Ä–∞–≤–∫–∞ WebSocket –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {}", updateType);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ WebSocket
    }
}